namespace: openstack.ops

operations:
  - get_authentication:
      inputs:
        - host
        - identityPort
        - username
        - password
        - url:
            default: "'http://'+ host + ':' + identityPort + '/v2.0/tokens'"
            override: true
        - body:
            default: "'{\"auth\": {\"tenantName\": \"demo\",\"passwordCredentials\": {\"username\": \"' + username + '\", \"password\": \"' + password + '\"}}}'"
            override: true
        - method:
            default: "'post'"
            override: true
        - contentType:
            default: "'application/json'"
            override: true
      action:
        java_action:
          className: org.openscore.content.httpclient.HttpClientAction
          methodName: execute
      outputs:
        - returnResult
        - statusCode
        - returnCode
        - errorMessage: returnResult if returnCode == '-1' or statusCode != 200 else ''
      results:
        - SUCCESS: returnCode != '-1' and statusCode == '200'
        - FAILURE
  - parse_authentication:
      inputs:
        - jsonAuthenticationResponse
      action:
        java_action:
          className: org.openscore.lang.tests.operation.actions.OpenstackUtils
          methodName: parseAuthentication
      outputs:
        - token: parsedToken
        - tenant: parsedTenant
        - returnResult: returnResult
        - returnCode: returnCode
      results:
        - SUCCESS : returnCode == '0'
        - FAILURE
  - python_parse_authentication:
      inputs:
        - jsonAuthenticationResponse
      action:
        python_script: |
          try:
            import json
            decoded = json.loads(jsonAuthenticationResponse)
            accessJson = decoded['access']
            tokenJson = accessJson['token']
            token = tokenJson['id']
            tenantJson = tokenJson['tenant']
            tenant = tenantJson['id']
            returnCode = '0'
            returnResult = 'Parsing successful.'
          except:
            returnCode = '-1'
            returnResult = 'Parsing error.'
      outputs:
        - token
        - tenant
        - returnCode
        - returnResult
        - errorMessage: returnResult if returnCode == '-1' else ''
      results:
        - SUCCESS: returnCode == '0'
        - FAILURE


  - create_openstack_server:
      inputs:
        - host
        - computePort
        - token
        - tenant
        - serverName
        - imgRef
        - headers:
            default: "'X-AUTH-TOKEN:' + token"
            override: true
        - url:
            default: "'http://'+ host + ':' + computePort + '/v2/' + tenant + '/servers'"
            override: true
        - body:
            default: "'{\"server\": { \"name\": \"' + serverName + '\" , \"imageRef\": \"' + imgRef + '\", \"flavorRef\":\"2\",\"max_count\":1,\"min_count\":1,\"security_groups\": [ {\"name\": \"default\"}] }}'"
            override: true
        - contentType:
            default: "'application/json'"
            override: true
        - method:
            default: "'post'"
            override: true
      action:
        java_action:
          className: org.openscore.content.httpclient.HttpClientAction
          methodName: execute
      outputs:
        - returnResult: returnResult
        - statusCode: statusCode
        - errorMessage: returnResult if statusCode != '202' else ''
      results:
        - SUCCESS : statusCode == '202'
        - FAILURE
  - get_openstack_servers:
      inputs:
        - host
        - computePort
        - token
        - tenant
        - headers:
            default: "'X-AUTH-TOKEN:' + token"
            override: true
        - url:
            default: "'http://'+ host + ':' + computePort + '/v2/' + tenant + '/servers'"
            override: true
        - method:
            default: "'get'"
            override: true
      action:
        java_action:
          className: org.openscore.content.httpclient.HttpClientAction
          methodName: execute
      outputs:
        - returnResult: returnResult
        - statusCode: statusCode
        - errorMessage: returnResult if statusCode != '202' else ''
      results:
        - SUCCESS : statusCode == '200'
        - FAILURE
  - delete_openstack_server:
      inputs:
        - host
        - computePort
        - token
        - tenant
        - serverID
        - headers:
            default: "'X-AUTH-TOKEN:' + token"
        - url:
            default: "'http://'+ host + ':' + computePort + '/v2/' + tenant + '/servers/' + serverID"
            override: true
        - method:
            default: "'delete'"
            override: true
      action:
        java_action:
          className: org.openscore.content.httpclient.HttpClientAction
          methodName: execute
      outputs:
        - returnResult: returnResult
        - statusCode: statusCode
        - errorMessage: returnResult if statusCode != '204' else ''
      results:
        - SUCCESS : statusCode == '204'
        - FAILURE
  - extract_servers:
      inputs:
        - server_body
      action:
        python_script: |
          try:
            import json
            decoded = json.loads(server_body)
            serverListJson = decoded['servers']
            nrServers = len(serverListJson)
            serverList = ''
            for index in range(nrServers):
              serverName = serverListJson[index]['name']
              serverList = serverList + serverName + ','
            serverList = serverList[:-1]
            returnCode = '0'
            returnResult = 'Parsing successful.'
          except:
            returnCode = '-1'
            returnResult = 'Parsing error.'
      outputs:
        - serverList
        - returnResult
        - returnCode
        - errorMessage: returnResult if returnCode == '-1' else ''
  - get_server_id:
        inputs:
          - server_body
          - deleteServerName
        action:
          python_script: |
            try:
              import json
              decoded = json.loads(server_body)
              serverListJson = decoded['servers']
              nrServers = len(serverListJson)
              serverList = ''
              for index in range(nrServers):
                serverName = serverListJson[index]['name']
                if serverName == deleteServerName:
                  serverID = serverListJson[index]['id']
              returnCode = '0'
              returnResult = 'Parsing successful.'
            except:
              returnCode = '-1'
              returnResult = 'Parsing error.'

        outputs:
          - serverID
          - returnResult
          - returnCode
          - errorMessage: returnResult if returnCode == '-1' else ''

  - string_occurrence_counter:
        inputs:
          - container
          - toFind
          - ignoreCase
        action:
          python_script: |
            try:
              if ignoreCase == 'true':
                container.lower()
                toFind.lower()
              occurrence = container.count(toFind)
              returnCode = '0'
              if occurrence == 0:
                returnResult = 'Server was not created'
              else:
                returnResult = occurrence
            except:
              returnCode = '-1'
              returnResult = 'String occurrence error.'
        outputs:
          - occurrence
          - returnResult
          - returnCode
          - errorMessage: returnResult if occurrence == '0'  else ''
        results:
          - SUCCESS: occurrence >= '1'
          - FAILURE

  - check_server:
        inputs:
          - serverName
          - serverList
          - container: serverList
          - toFind: serverName
          - ignoreCase: "'true'"
        action:
          java_action:
            className: org.openscore.lang.tests.operation.actions.StringOccurrenceCounter
            methodName: execute
        outputs:
          - occurrences: returnResult
          - returnCode: returnCode
          - returnResult
          - errorMessage: returnResult if returnCode == '-1' else ''
        results:
          - SUCCESS : returnResult == '1' and returnCode == '0'
          - FAILURE

